// Copyright 2023 StarkWare Industries Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.starkware.co/open-source-license/
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions
// and limitations under the License.

#include <sys/resource.h>
#include <cstdio>

#include "gflags/gflags.h"
#include "glog/logging.h"
#include "gtest/gtest.h"

#include "starkware/utils/task_manager.h"

/*
  Running death tests with Valgrind might cause generation of valgrind core-dump files (dependant on
  environment variables). Invoking this function ensures no core-dumps are generated by those tests.
*/
void DisableCoreDump() {
  struct rlimit rlim {};

  rlim.rlim_cur = rlim.rlim_max = 0;
  setrlimit(RLIMIT_CORE, &rlim);
}

GTEST_API_ int main(int argc, char** argv) {
  // Disable valgrind core-dump.
  DisableCoreDump();

  // Initialize Google's flags, logging, and test libraries.
  testing::InitGoogleTest(&argc, argv);

#ifndef __EMSCRIPTEN__
  FLAGS_n_threads = 4;  // Override default before parsing user provided arguments.
#else
  FLAGS_n_threads = 1;  // In Web-Assembly environment we still run single-threaded.
#endif

  gflags::ParseCommandLineFlags(&argc, &argv, true);
  google::InitGoogleLogging(argv[0]);  // NOLINT
  DLOG(INFO) << "Running Starkware's main() from gtest_main.cc\n";
  return RUN_ALL_TESTS();
}
